function Square.new 0
  push constant 3
  call Memory.alloc 1
  pop pointer 0
  push argument 0
  pop this 0
  // let x = Ax ;
  push argument 1
  pop this 1
  // let y = Ay ;
  push argument 2
  pop this 2
  // let size = Asize ;
  push pointer 0
  call Square.draw 1
  pop temp 0
  // do draw ( ) ;
  push pointer 0
  return
  // return this ;

function Square.dispose 0
  push argument 0
  pop pointer 0
  push pointer 0
  call Memory.deAlloc 1
  pop temp 0
  // do Memory . deAlloc ( this ) ;
  push constant 0
  return
  // return ;

function Square.draw 0
  push argument 0
  pop pointer 0
  push constant 1
  neg
  call Screen.setColor 1
  pop temp 0
  // do Screen . setColor ( true ) ;
  push this 0
  push this 1
  push this 0
  push this 2
  add
  push this 1
  push this 2
  add
  call Screen.drawRectangle 4
  pop temp 0
  // do Screen . drawRectangle ( x , y , x + size , y + size ) ;
  push constant 0
  return
  // return ;

function Square.erase 0
  push argument 0
  pop pointer 0
  push constant 0
  call Screen.setColor 1
  pop temp 0
  // do Screen . setColor ( false ) ;
  push this 0
  push this 1
  push this 0
  push this 2
  add
  push this 1
  push this 2
  add
  call Screen.drawRectangle 4
  pop temp 0
  // do Screen . drawRectangle ( x , y , x + size , y + size ) ;
  push constant 0
  return
  // return ;

function Square.incSize 0
  push argument 0
  pop pointer 0
  push this 1
  push this 2
  add
  push constant 254
  lt
  push this 0
  push this 2
  add
  push constant 510
  lt
  and
  not
  if-goto Square.incSize.0
  push pointer 0
  call Square.erase 1
  pop temp 0
  // do erase ( ) ;
  push this 2
  push constant 2
  add
  pop this 2
  // let size = size + 2 ;
  push pointer 0
  call Square.draw 1
  pop temp 0
  // do draw ( ) ;
  goto Square.incSize.1
label Square.incSize.0
label Square.incSize.1
  // }
  push constant 0
  return
  // return ;

function Square.decSize 0
  push argument 0
  pop pointer 0
  push this 2
  push constant 2
  gt
  not
  if-goto Square.decSize.0
  push pointer 0
  call Square.erase 1
  pop temp 0
  // do erase ( ) ;
  push this 2
  push constant 2
  sub
  pop this 2
  // let size = size - 2 ;
  push pointer 0
  call Square.draw 1
  pop temp 0
  // do draw ( ) ;
  goto Square.decSize.1
label Square.decSize.0
label Square.decSize.1
  // }
  push constant 0
  return
  // return ;

function Square.moveUp 0
  push argument 0
  pop pointer 0
  push this 1
  push constant 1
  gt
  not
  if-goto Square.moveUp.0
  push constant 0
  call Screen.setColor 1
  pop temp 0
  // do Screen . setColor ( false ) ;
  push this 0
  push this 1
  push this 2
  add
  push constant 1
  sub
  push this 0
  push this 2
  add
  push this 1
  push this 2
  add
  call Screen.drawRectangle 4
  pop temp 0
  // do Screen . drawRectangle ( x , ( y + size ) - 1 , x + size , y + size ) ;
  push this 1
  push constant 2
  sub
  pop this 1
  // let y = y - 2 ;
  push constant 1
  neg
  call Screen.setColor 1
  pop temp 0
  // do Screen . setColor ( true ) ;
  push this 0
  push this 1
  push this 0
  push this 2
  add
  push this 1
  push constant 1
  add
  call Screen.drawRectangle 4
  pop temp 0
  // do Screen . drawRectangle ( x , y , x + size , y + 1 ) ;
  goto Square.moveUp.1
label Square.moveUp.0
label Square.moveUp.1
  // }
  push constant 0
  return
  // return ;

function Square.moveDown 0
  push argument 0
  pop pointer 0
  push this 1
  push this 2
  add
  push constant 254
  lt
  not
  if-goto Square.moveDown.0
  push constant 0
  call Screen.setColor 1
  pop temp 0
  // do Screen . setColor ( false ) ;
  push this 0
  push this 1
  push this 0
  push this 2
  add
  push this 1
  push constant 1
  add
  call Screen.drawRectangle 4
  pop temp 0
  // do Screen . drawRectangle ( x , y , x + size , y + 1 ) ;
  push this 1
  push constant 2
  add
  pop this 1
  // let y = y + 2 ;
  push constant 1
  neg
  call Screen.setColor 1
  pop temp 0
  // do Screen . setColor ( true ) ;
  push this 0
  push this 1
  push this 2
  add
  push constant 1
  sub
  push this 0
  push this 2
  add
  push this 1
  push this 2
  add
  call Screen.drawRectangle 4
  pop temp 0
  // do Screen . drawRectangle ( x , ( y + size ) - 1 , x + size , y + size ) ;
  goto Square.moveDown.1
label Square.moveDown.0
label Square.moveDown.1
  // }
  push constant 0
  return
  // return ;

function Square.moveLeft 0
  push argument 0
  pop pointer 0
  push this 0
  push constant 1
  gt
  not
  if-goto Square.moveLeft.0
  push constant 0
  call Screen.setColor 1
  pop temp 0
  // do Screen . setColor ( false ) ;
  push this 0
  push this 2
  add
  push constant 1
  sub
  push this 1
  push this 0
  push this 2
  add
  push this 1
  push this 2
  add
  call Screen.drawRectangle 4
  pop temp 0
  // do Screen . drawRectangle ( ( x + size ) - 1 , y , x + size , y + size ) ;
  push this 0
  push constant 2
  sub
  pop this 0
  // let x = x - 2 ;
  push constant 1
  neg
  call Screen.setColor 1
  pop temp 0
  // do Screen . setColor ( true ) ;
  push this 0
  push this 1
  push this 0
  push constant 1
  add
  push this 1
  push this 2
  add
  call Screen.drawRectangle 4
  pop temp 0
  // do Screen . drawRectangle ( x , y , x + 1 , y + size ) ;
  goto Square.moveLeft.1
label Square.moveLeft.0
label Square.moveLeft.1
  // }
  push constant 0
  return
  // return ;

function Square.moveRight 0
  push argument 0
  pop pointer 0
  push this 0
  push this 2
  add
  push constant 510
  lt
  not
  if-goto Square.moveRight.0
  push constant 0
  call Screen.setColor 1
  pop temp 0
  // do Screen . setColor ( false ) ;
  push this 0
  push this 1
  push this 0
  push constant 1
  add
  push this 1
  push this 2
  add
  call Screen.drawRectangle 4
  pop temp 0
  // do Screen . drawRectangle ( x , y , x + 1 , y + size ) ;
  push this 0
  push constant 2
  add
  pop this 0
  // let x = x + 2 ;
  push constant 1
  neg
  call Screen.setColor 1
  pop temp 0
  // do Screen . setColor ( true ) ;
  push this 0
  push this 2
  add
  push constant 1
  sub
  push this 1
  push this 0
  push this 2
  add
  push this 1
  push this 2
  add
  call Screen.drawRectangle 4
  pop temp 0
  // do Screen . drawRectangle ( ( x + size ) - 1 , y , x + size , y + size ) ;
  goto Square.moveRight.1
label Square.moveRight.0
label Square.moveRight.1
  // }
  push constant 0
  return
  // return ;

