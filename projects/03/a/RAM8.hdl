// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way (in=load, sel=address, a=load1, b=load2, c=load3, d=load4, e=load5, f=load6, g=load7, h=load8);
    Register (in=in, load=load1, out=rs1);
    Register (in=in, load=load2, out=rs2);
    Register (in=in, load=load3, out=rs3);
    Register (in=in, load=load4, out=rs4);
    Register (in=in, load=load5, out=rs5);
    Register (in=in, load=load6, out=rs6);
    Register (in=in, load=load7, out=rs7);
    Register (in=in, load=load8, out=rs8);
    Mux8Way16 (a=rs1, b=rs2, c=rs3, d=rs4, e=rs5, f=rs6, g=rs7, h=rs8, sel=address, out=out);
}